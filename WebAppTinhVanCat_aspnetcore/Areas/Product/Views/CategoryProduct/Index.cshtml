@using WebAppTinhVanCat_aspnetcore.Models.Product;
@model IEnumerable<WebAppTinhVanCat_aspnetcore.Models.Product.CategoryProduct>

@{
    ViewData["Title"] = "Danh mục sản phẩm";
    
}

<p>
    <a class="btn btn-primary" asp-action="Create">Thêm danh mục mới</a>
</p>
<div class="card shadow mb-4">
    

    <div class="card-body">
        <div class="table-responsive">

            <table class="table table-bordered table-striped" id="dataTable" width="100%" cellspacing="0">
                <thead class="bg-primary text-light">

                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Slug)
                        </th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                       await  RenderCategoryAsync(item, 0);

                    }
                </tbody>
            </table>
    </div>
</div>

@{
    async Task RenderCategoryAsync(CategoryProduct item, int level)
    {
        string prefix = string.Concat(Enumerable.Repeat("&emsp;", level));
        <tr>
            <td>
                @Html.Raw(prefix)
                <a asp-action="Edit" asp-route-id="@item.Id">
                    @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Slug) 
            </td>

            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Sửa</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Chi tiết</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Xóa</a>
            </td>
        </tr>
        if(item.CategoryChildren?.Count > 0)
        {
            foreach(var cCategory in item.CategoryChildren)
            {
                await RenderCategoryAsync(cCategory, level + 1);
            }

        }
    }
}
@{
    _AdminSideBarService.SetActive("CategoryProduct", "Index", "Product");
}
@section Sidebar {
    @Html.Raw(_AdminSideBarService.renderHtml())
}