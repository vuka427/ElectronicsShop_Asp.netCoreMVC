@using WebAppTinhVanCat_aspnetcore.Areas.Product.Models;
@model CheckoutModel;



@{
    var ListCartItem =  ViewData["ListCartItem"] as List<CartItem>;

    Layout = "_LayoutClient";
    ViewData["Title"] = "Thanh Toán";

}
<h2 class="text-center">Thanh Toán</h2>



@if (ListCartItem.Count > 0)
{
    decimal total = 0;
    int stt = 1;

    <table class="table ">
        <tr class="bg-danger text-light font-weight-bold ">
            <th>STT</th>
            <th>Ảnh</th>
            <th>Sản phẩm</th>
            <th>Giá</th>
            <th>Số lượng</th>
            <th>Thành tiền</th>
            <th></th>
        </tr>
        @foreach (var cartitem in ListCartItem)
        {
            var thanhtien = cartitem.quantity * cartitem.product.Price;
            total += thanhtien;
            var srcimg = (cartitem.product.Photos != null) && (cartitem.product.Photos.Count > 0) ? "/contens/Products/" + cartitem.product.Photos.First().FileName : "/contens/ico/nophoto.png";

            <tr>
                <td>@(stt++)</td>
                <td> <img class="cart-photo" src="@srcimg" alt=""> </td>
                <td>@cartitem.product.Title</td>
                <td>
                    @cartitem.product.Price.ToPriceUnitVND()
                </td>
                <td>@cartitem.quantity / @cartitem.product.UnitProduct.Unit </td>
                <td>
                    @thanhtien.ToPriceUnitVND()
                </td>
            </tr>
        }
        <tr>
            <td colspan="4" class="text-right font-weight-bold h4">Tổng tiền</td>
            <td class="text-danger font-weight-bold h4">
                @total.ToPriceUnitVND()
            </td>
            <td></td>
        </tr>
    </table>

    <hr />
    <form class="row" asp-action="CheckoutConfirm" method="post">
        <h5 class="col-12 text-center"> Địa chỉ giao hàng </h5>
        <small class="col-12 text-center"><i>(phải cập nhật họ tên và địa chỉ trước khi đặt hàng)</i></small>


        <div class="form-group col-12">
            <label asp-for="DcTinh" class="control-label font-weight-bold"></label>
            <select asp-for="DcTinh" id="city" class="form-control">
                <option value="" selected >Chọn tỉnh thành</option>
            </select>
            <span asp-validation-for="DcTinh" class="text-danger"></span>
        </div>
        <div class="form-group col-12">
            <label asp-for="DcHuyen" class="control-label font-weight-bold"></label>
            <select asp-for="DcHuyen" id="district" class="form-control">
                <option value="" selected>Chọn quận huyện</option>
            </select>
            <span asp-validation-for="DcHuyen" class="text-danger"></span>
        </div>
        <div class="form-group col-12">
            <label asp-for="DcXa" class="control-label font-weight-bold"></label>
            <select asp-for="DcXa" id="ward" class="form-control">
                <option value="" selected>Chọn phường xã</option>
            </select>
            <span asp-validation-for="DcXa" class="text-danger"></span>
        </div>
        <div class="form-group w-25 col-12">
            <label asp-for="SoNha" class="control-label font-weight-bold"></label>
            <input asp-for="SoNha" class="form-control" />
            <span asp-validation-for="SoNha" class="text-danger"></span>
        </div>
        <div class="form-group col-12">
            <label asp-for="PhoneNumber" class="control-label font-weight-bold"></label>
            <input asp-for="PhoneNumber" class="form-control" value="@ViewBag.phonenumber" />
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>


        <div class="form-group col-12 text-center">
            <input type="submit" value="Đặt Hàng" class="btn btn-danger"   />
        </div>
    </form>
    
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/axios/axios.min.js"></script>
    <script>
        var citis = document.getElementById("city");
        var districts = document.getElementById("district");
        var wards = document.getElementById("ward");
        var Parameter = {
            url: "@Url.Content("~/json/DiaGioiHanhChinhVN.json")",
            method: "GET",
            responseType: "application/json",
        };
        var promise = axios(Parameter);
        promise.then(function (result) {
            renderCity(result.data);
        });

        function renderCity(data) {
            for (const x of data) {
                citis.options[citis.options.length] = new Option(x.Name, x.Id);
                
                
            }

            citis.onchange = function () {
                district.length = 1;
                ward.length = 1;
                if (this.value != "") {
                    const result = data.filter(n => n.Id === this.value);

                    for (const k of result[0].Districts) {
                        district.options[district.options.length] = new Option(k.Name, k.Id);
                    }
                }
            };
            district.onchange = function () {
                ward.length = 1;
                const dataCity = data.filter((n) => n.Id === citis.value);
                if (this.value != "") {
                    const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

                    for (const w of dataWards) {
                        wards.options[wards.options.length] = new Option(w.Name, w.Id);
                    }
                }
            };
        }
    </script>


}
