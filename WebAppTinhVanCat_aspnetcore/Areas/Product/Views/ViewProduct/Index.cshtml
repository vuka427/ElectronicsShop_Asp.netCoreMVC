
@using WebAppTinhVanCat_aspnetcore.Components;
@using WebAppTinhVanCat_aspnetcore.Models.Product;
@using WebAppTinhVanCat_aspnetcore.ExtendMethods;
@model List<ProductModel>


@{
    List<CategoryProduct> categories = ViewBag.categories as List<CategoryProduct> ;
    CategoryProduct category = ViewBag.category as CategoryProduct;
    ViewData["Title"] = (category != null)? category.Title : "Tất cả sản phẩm";

    string sortby = ViewBag.sortby as string;
    string datecreate ="", priceup ="", pricedown ="";

    List<TradeMarkModel> trademarks = ViewBag.trandemark as List<TradeMarkModel>;
    int tradeId = ViewBag.trandemarkID;
    int pricestart = ViewBag.pricestart;
    int priceend = ViewBag.priceend;


}
<div class="mb-3">
    <form method="get" class="row justify-content-center" >
        <div class="input-group col-6">
            <input type="text"  name="searchstring" class="form-control " placeholder="Tìm kiếm">
            <div class="input-group-append">
                <button class="btn btn-danger" type="submit">
                    <i class="fa fa-search"></i>
                </button>
            </div>

        </div>
    </form>
</div>


    
<nav aria-label="breadcrumb"> 
    <ol class="breadcrumb"> 
        <li class="breadcrumb-item p-1"><a href="~/">Home</a></li>
        @if (category != null)
        {
            var listParent = category.ListParents();
            foreach (var item in listParent)
            {
                <li class="breadcrumb-item" >
                    <a asp-action="Index" asp-route-productslug="@item.Slug">
                        @item.Title
                    </a> 
                </li>
            }
        }

    </ol>
</nav>

<div class="row">
    <div class="col-9">
        <h3> @ViewData["Title"] </h3>

        @if (category != null)
        {
            <p> @Html.Raw(category.Content) </p>
        }
        else
        {
            if(tradeId!= 0)
            {
                var t =  trademarks.Where(t => t.Id == tradeId).FirstOrDefault();
                if (t != null)
                {
                    <p>Sản phẩm thuộc nhãn hiệu:<strong>@t.Name </strong> </p>
                }
            }
            else
            {
                if (priceend >0)
                {
                    <p>Sản phẩm thuộc có giá từ @pricestart.ToPriceUnitVND() đến @priceend.ToPriceUnitVND()</p>
                }
                else
                {
                     <p>Sản phẩm thuộc tất cả các danh mục</p>
                }
               
            }
            
        }
    </div>
    <div class="col-3 float-right">
        <form method="get" >
            <div class="form-group">
                <select class="form-control" name="sortby" onchange="this.form.submit()">
                    @{
                        
                        if (!String.IsNullOrEmpty(sortby))
                        {
                            switch (sortby)
                            {
                                case "datecreate":
                                    datecreate = "selected";
                                    break;
                                case "pricedown":
                                    pricedown = "selected";
                                    break;
                                case "priceup":
                                    priceup = "selected";
                                    break;
                                default:
                                    datecreate = "selected";
                                    break;
                            }
                        }
                    }
                    <!option @datecreate value="datecreate"  >mới nhất</!option>
                    <!option @priceup value="priceup" >giá thấp đến cao</!option>
                    <!option @pricedown value="pricedown" >giá cao xuống thấp</!option>
                </select>
            </div>
        </form>
    </div>
</div>




<div class="row">
    @foreach (var product in Model)
    {
        var srcimg = product.Photos.Count > 0 ? "/contens/Products/" + product.Photos.First().FileName : "/contens/ico/nophoto.png";
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card-product  " style="min-width:240px; max-width:270px;">

                <div class="card shadow h-100 py-2 mb-2" >

                    <a class="card-link" asp-controller="ViewProduct" asp-action="Detail" asp-route-productslug="@product.Slug">
                        <div class="cart-img">
                            <img src="@srcimg" class="card-img-top" alt="">
                        </div>
                    </a>
                    
                    <div class="card-body mb-0 pb-0">
                        <h6 class="card-title font-weight-bold "> @product.Title</h6>
                        <p class="card-title mt-2 mb-0 pb-0">
                            <strong class="text-danger h5">@product.Price.ToPriceUnitVND()</strong>
                            <p class="text-danger text-right ">@String.Format("{0:0.0}", product.rating) <i class="far fa-star"></i></p>
                        </p>
                    </div>

                    <div class="card-footer ">
                        <a asp-controller="Order" asp-action="AddToCart" asp-route-productid="@product.ProductId" class="btn btn-sm btn-danger float-right">Đặt hàng</a>
                        <a class="AddCart btn btn-sm btn-outline-primary text-primary float-left" data-id="@product.ProductId">Thêm vào giỏ</a>
                    </div>
                </div>
            
            </div>
        </div>
   }

</div>

<partial name="_PagingXTL" model="@ViewBag.PagingModel" />



@section Sidebar {
    <div class="card shadow  mb-3 mt-5">
        
            @await Component.InvokeAsync("WebAppTinhVanCat_aspnetcore.Components.CategoryProductSidebar",
            new CategoryProductSidebar.CategoryProductSidebarData()// chuyên data sang viewcomponent
            {
                Categories = categories,
                Level = 0,
                CategorySlug = @ViewBag.categoryslug
            })
       
    </div>
   

    <div class="card shadow  mb-3 mt-4">
        <div class="card-header bg-danger text-light font-weight-bold">
            Nhãn hiệu
        </div>
        <div class="card-body p-2">
            <div class="list-group list-group-flush">
                @if (trademarks.Count >= 0)
                {
                    foreach (var trade in trademarks)
                    {
                        if ( trade.Id == tradeId)
                        {
                            <a class="list-group-item list-group-item-danger" asp-action="Index" asp-route-trademark="@trade.Id">@trade.Name</a>
                        }
                        else
                        {
                            <a class="list-group-item text-danger " asp-action="Index" asp-route-trademark="@trade.Id" >@trade.Name</a>
                        }
                        
                    }
                }
                
            </div>
        </div>
    </div>

    <div class="card shadow  mb-3 mt-4">
        <div class="card-header bg-danger text-light font-weight-bold">
           Lọc theo mức giá
        </div>
        <form method="get">
            <div class="card-body text-danger p-3">
            
                <div class="form-group ">
                    <label for="pricestart">Từ</label>
                    <input type="number" value="@pricestart" class="form-control" id="pricestart" name="pricestart" min="0" max="1000000000" step="100000">
                        
                </div>
                <div class="form-group">
                    <label for="priceend">Đến</label>
                    <input type="number" value="@priceend" class="form-control" id="priceend" name="priceend" min="0" max="1000000000" step="100000">

                </div>


               
           
            </div>

            <div class="card-footer ">
                <button class="btn btn-danger" >Áp dụng</button>
            </div>
        </form>

    </div>



}

@section Scripts{
    <script>
        function SetClickAddCart() {

            $(".AddCart").click(function () {  

                var Button = $(this);
                var id = Button.data("id");
                var formData = new FormData();
                formData.append("productid", id);
                var urlUpdateState = "@Url.Action("AddToCartApi","Order")";
                var cart = $("#cart-icon");
                $.ajax({
                    data: formData,
                    cache: false,
                    url: urlUpdateState,
                    type: "POST",
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        alert(data.message);
                        if (data.error == 0) {
                           cart.html(
                                "<div class=\"nav-item mt-2\" ><a class=\"text-light  mr-2\" href=\"/cart\" ><i class=\"fas fa-shopping-cart fa-lg\" ></i>"
                                + "(" + data.quantity + ")</a></div>"
                           );
                        }


                    }
                });
            });
        }



        $(document).ready(function () {

            SetClickAddCart();
        });
    </script>
}

